version: "3.4"
services:
  logspout:
    image: honeycombio/logspout-honeycomb:1.13
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    env_file:
      - logging.env
    ports:
      - "8100:80"
  web:
    image: metacpan-web:latest
    build:
      context: ./src/metacpan-web
    volumes:
      - type: volume
        source: web_carton
        target: /carton
      - type: bind
        source: ./configs/metacpan-web/metacpan_web.conf
        target: /metacpan-web/metacpan_web.conf
        read_only: true
      - type: bind
        source: ./src/metacpan-web
        target: /metacpan-web
        read_only: true
    ports:
      - "5001:5001"
    networks:
      - web
  api:
    depends_on:
      - elasticsearch
      - elasticsearch_test
      - pgdb
      - logspout
    image: metacpan-api:latest
    build:
      context: ./src/metacpan-api
    env_file:
      - localapi.env
    command: "/wait-for-it.sh ${PGDB} -- ${API_SERVER} ./bin/api.pl"
    volumes:
      - type: volume
        source: cpan
        target: /CPAN
      - type: bind
        source: ./src/metacpan-api
        target: /metacpan-api
      - type: bind
        source: ./configs/metacpan-api/metacpan_server.conf
        target: /metacpan-api/metacpan_server.conf
        read_only: true
      - type: bind
        source: ./configs/metacpan-api/metacpan.pl
        target: /metacpan-api/etc/metacpan.pl
        read_only: true
      - type: bind
        source: ./bin/index-cpan.sh
        target: /bin/index-cpan.sh
        read_only: true
      - type: bind
        source: ./bin/partial-cpan-mirror.sh
        target: /bin/partial-cpan-mirror.sh
        read_only: true
    ports:
      - "5000:5000"
    networks:
      - elasticsearch
      - web
      - database

#        _ _   _           _                           _
#   __ _(_) |_| |__  _   _| |__    _ __ ___   ___  ___| |_ ___
#  / _` | | __| '_ \| | | | '_ \  | '_ ` _ \ / _ \/ _ \ __/ __|
# | (_| | | |_| | | | |_| | |_) | | | | | | |  __/  __/ |_\__ \
#  \__, |_|\__|_| |_|\__,_|_.__/  |_| |_| |_|\___|\___|\__|___/
#  |___/
#                                        _
#   ___ _ __   __ _ _ __   __      _____| |__
#  / __| '_ \ / _` | '_ \  \ \ /\ / / _ \ '_ \
# | (__| |_) | (_| | | | |  \ V  V /  __/ |_) |
#  \___| .__/ \__,_|_| |_|   \_/\_/ \___|_.__/
#      |_|
#

  github-meets-cpan-web:
    image: metacpan/github-meets-cpan:latest
    command: "/wait-for-it.sh mongodb:27017 -- morbo script/app.pl"
    depends_on:
      - mongodb
      - logspout
    networks:
      - mongo
    ports:
      - "127.0.0.1:${GH_CPAN_SITE_PORT:-3000}:3000"

#        _ _   _           _                           _
#   __ _(_) |_| |__  _   _| |__    _ __ ___   ___  ___| |_ ___
#  / _` | | __| '_ \| | | | '_ \  | '_ ` _ \ / _ \/ _ \ __/ __|
# | (_| | | |_| | | | |_| | |_) | | | | | | |  __/  __/ |_\__ \
#  \__, |_|\__|_| |_|\__,_|_.__/  |_| |_| |_|\___|\___|\__|___/
#  |___/
#                                        _
#   ___ _ __   __ _ _ __   __      _____| |__     ___ _ __ ___  _ __
#  / __| '_ \ / _` | '_ \  \ \ /\ / / _ \ '_ \   / __| '__/ _ \| '_ \
# | (__| |_) | (_| | | | |  \ V  V /  __/ |_) | | (__| | | (_) | | | |
#  \___| .__/ \__,_|_| |_|   \_/\_/ \___|_.__/   \___|_|  \___/|_| |_|
#      |_|
#
  github-meets-cpan-web-cron:
    image: metacpan/github-meets-cpan:latest
    command: "/wait-for-it.sh mongodb:27017 -- perl cron/update.pl"
    depends_on:
      - mongodb
    volumes:
      - type: bind
        source: ${MC_CONF_PRIVATE_DIR:-.}/github-meets-cpan/environment.json
        target: /code/environment.json
        read_only: true
    networks:
      - mongo

  elasticsearch:
    image: elasticsearch:2.4
    depends_on:
      - logspout
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
      - type: bind
        source: ./elasticsearch/metacpan.yml
        target: /usr/share/elasticsearch/config/metacpan.yml
        read_only: true
      - type: bind
        source: ./elasticsearch/scripts
        target: /usr/share/elasticsearch/config/scripts
        read_only: true
    ports:
      - "9200:9200"
    networks:
      - elasticsearch
  elasticsearch_test:
    image: elasticsearch:2.4
    depends_on:
      - logspout
    volumes:
      - type: volume
        source: elasticsearch_test
        target: /usr/share/elasticsearch/data
      - type: bind
        source: ./elasticsearch/test.yml
        target: /usr/share/elasticsearch/config/test.yml
        read_only: true
      - type: bind
        source: ./elasticsearch/scripts
        target: /usr/share/elasticsearch/config/scripts
        read_only: true
    ports:
      - "9900:9200"
    networks:
      - elasticsearch
  pgdb:
    hostname: pgdb
    image: "postgres:${PG_VERSION_TAG:-9.6-alpine}"
    depends_on:
      - logspout
    build:
      context: "./pg"
      args:
        PG_TAG: "${PG_VERSION_TAG:-9.6-alpine}"
    ports:
      - "5432:5432"
    networks:
      - database
    healthcheck:
      interval: 10s
      timeout: 1s
      retries: 0
      start_period: 480s
      test: ["CMD", "/healthcheck.sh"]
    volumes:
      - type: volume
        source: pgdb-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./pg/docker-entrypoint-initdb.d
        target: /docker-entrypoint-initdb.d
        read_only: true
      - type: bind
        source: ./pg/healthcheck.sh
        target: /healthcheck.sh
        read_only: true

#                                        _ _
#  _ __ ___   ___  _ __   __ _  ___   __| | |__
# | '_ ` _ \ / _ \| '_ \ / _` |/ _ \ / _` | '_ \
# | | | | | | (_) | | | | (_| | (_) | (_| | |_) |
# |_| |_| |_|\___/|_| |_|\__, |\___/ \__,_|_.__/
#                        |___/
#

  mongodb:
    image: mvertes/alpine-mongo:latest
    networks:
      - mongo

networks:
  elasticsearch:
  database:
  web:
  mongo:

volumes:
  web_carton:
  api_carton:
  cpan:
  elasticsearch:
  elasticsearch_test:
  pgdb-data:
