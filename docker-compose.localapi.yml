version: '3.4'
services:
  web:
    image: metacpan-web:latest
    depends_on:
      - api
    env_file:
      - localapi.env
    volumes:
      - ./configs/metacpan-web/metacpan_web.conf:/metacpan-web/metacpan_web.conf
  api:
    depends_on:
      - elasticsearch
      - elasticsearch_test
      - pgdb
    image: metacpan-api:latest
    build:
      context: ./src/metacpan-api
    env_file:
      - localapi.env
    volumes:
      - cpan:/CPAN
      - api_carton:/carton
      - ./src/metacpan-api:/metacpan-api
      - ./configs/metacpan-api/metacpan_server.conf:/metacpan-api/metacpan_server.conf
      - ./configs/metacpan-api/metacpan.pl:/metacpan-api/etc/metacpan.pl
      - ./bin/index-cpan.sh:/bin/index-cpan.sh
      - ./bin/partial-cpan-mirror.sh:/bin/partial-cpan-mirror.sh
    ports:
      - "5000:5000"
    networks:
      - elasticsearch
      - web
      - database
  elasticsearch:
    image: elasticsearch:2.4
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
      - ./elasticsearch/metacpan.yml:/usr/share/elasticsearch/config/metacpan.yml
      - ./elasticsearch/scripts:/usr/share/elasticsearch/config/scripts
    ports:
      - "9200:9200"
    networks:
      - elasticsearch
  elasticsearch_test:
    image: elasticsearch:2.4
    volumes:
      - elasticsearch_test:/usr/share/elasticsearch/data
      - ./elasticsearch/test.yml:/usr/share/elasticsearch/config/test.yml
      - ./elasticsearch/scripts:/usr/share/elasticsearch/config/scripts
    ports:
      - "9900:9200"
    networks:
      - elasticsearch
  pgdb:
    hostname: pgdb
    image: "postgres:${PG_VERSION_TAG:-9.6-alpine}"
    build:
      context: './pg'
      args:
        PG_TAG: "${PG_VERSION_TAG:-9.6-alpine}"
    ports:
      - "5432:5432"
    networks:
      - database
    healthcheck:
      interval: 10s
      timeout: 1s
      retries: 0
      start_period: 480s
      test: ["CMD", "/healthcheck.sh"]
    volumes:
      - type: volume
        source: pgdb-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./pg/docker-entrypoint-initdb.d
        target: /docker-entrypoint-initdb.d
        read_only: true
      - type: bind
        source: ./pg/healthcheck.sh
        target: /healthcheck.sh
        read_only: true

networks:
  elasticsearch:
  database:

volumes:
  api_carton:
  cpan:
  elasticsearch:
  elasticsearch_test:
  pgdb-data:
